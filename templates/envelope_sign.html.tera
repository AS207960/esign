{% extends "base" %}
{% block title %}{{ template.name }}{% endblock %}
{% block content %}
<div class="container">
    <h2>{{ template.name }}</h2>
    <h3>For: {{ envelope_recipient.email }}</h3>
    <p>
        Please review the document below before adding your details and signature to it.
        Once your happy click "Submit" to confirm your response.
    </p>

    {% include "pdf" %}

    <div class="modal" id="doneModal" tabindex="-1" role="dialog" aria-labelledby="loadingModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content border-success">
            <div class="modal-header">
                <h5 class="modal-title" id="loadingModalLabel">All done!</h5>
            </div>
            <div class="modal-body">
                <div class="d-flex justify-content-center">
                    <p>
                        Your signature has been recorded. You'll receive a copy of the final document
                        once everyone has signed. You can now close this tab.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>
</div>
{% endblock %}
{% block scripts %}
    <script src="/static/js/pdf.js" defer></script>
    <script src="/static/js/signer.js" defer></script>
    <script>
        var pageAnnotations = {
        {% for page, fields in own_fields %}
            {{ page }}: [{% for field in fields %}{
                id: "{{ field.id }}",
                type: "{{ field.field_type }}",
                top: {{ field.top }},
                left: {{ field.left }},
                width: {{ field.width }},
                height: {{ field.height }},
                required: {{ field.required }}
            },{% endfor %}],
        {% endfor %}
        };

        var loadingModal = new bootstrap.Modal(document.getElementById("loadingModal"), {
            backdrop: 'static',
            keyboard: false,
        });
        loadingModal.show();

        window.addEventListener("DOMContentLoaded", function () {
            var pdfViewer = new PDFViewer("/files/{{ envelope.current_file }}?key={{ file_key }}", pageAnnotations, []);
            var errorModal = new bootstrap.Modal(document.getElementById("errorModal"));
            var doneModal = new bootstrap.Modal(document.getElementById("doneModal"), {
                backdrop: 'static',
                keyboard: false,
            });
            var errorModalMsg = document.getElementById("errorModalMsg")

            pdfViewer.render().then(function () {
                pdfViewer.mount(
                    document.getElementById('the-pdf'),
                    new SignerModal(document.getElementById("signatureModal"))
                ).then(function () {
                    loadingModal.hide();
                }).catch(function (error) {
                    errorModalMsg.innerText = error.message;
                    errorModal.show();
                    loadingModal.hide();
                });
            }).catch(function (error) {
                errorModalMsg.innerText = error.message;
                errorModal.show();
                loadingModal.hide();
            });

            document.getElementById("submitButton").addEventListener("click", function () {
                var csrfToken = "{{ csrf_token }}";
                var submitData = pdfViewer.canSubmit();

                if (submitData) {
                    loadingModal.show();

                    fetch('/envelope/{{ envelope_id }}/sign/{{ recipient_id }}/create', {
                        method: "POST",
                        mode: "same-origin",
                        cache: "no-cache",
                        credentials: "same-origin",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            csrf_token: csrfToken,
                            fields: submitData,
                            key: "{{ envelope_recipient.key }}",
                        })
                    }).then(function (r) {
                        if (!r.ok) {
                          throw new Error('Network response was not OK');
                        }
                        return r.json();
                    }).then(function (d) {
                        loadingModal.hide();
                        doneModal.show();
                    }).catch(function (error) {
                        errorModalMsg.innerText = error.message;
                        errorModal.show();
                        loadingModal.hide();
                    });
                }
            });
        });
    </script>
{% endblock scripts %}